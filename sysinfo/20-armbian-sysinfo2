#!/bin/bash

RED="\033[1;31m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
BLUE="\033[1;34m"
PURPLE="\033[1;35m"
CYAN="\033[1;36m"
RESET="\033[0m"

echo -e "${CYAN}欢迎来到私人服务系统！${RESET}"
echo -e "${PURPLE}当前时间：$(date '+%Y-%m-%d %H:%M:%S')${RESET}"
echo -e "${BLUE}系统内核版本：$(uname -r)${RESET}"
echo -e "${GREEN}项目地址：https://github.com/qljsyph/bash-script 版本v1.1.6 ${RESET}"

check_singbox() {
if command -v sing-box >/dev/null 2>&1; then
    CURRENT_VERSION=$(sing-box version 2>/dev/null | head -n 1 | cut -d ' ' -f 3 || echo "未知版本")
    CURRENT_VERSION_TYPE=$(echo "$CURRENT_VERSION" | grep -oE '(alpha|beta|rc)' || echo "stable")
    CURRENT_VERSION="${CURRENT_VERSION#v}"

    ALL_VERSIONS=$(curl -s https://api.github.com/repos/SagerNet/sing-box/releases | grep -Po '"tag_name": "\K.*?(?=")')

    if [[ "$CURRENT_VERSION_TYPE" == "stable" ]]; then
        LATEST_VERSION=$(echo "$ALL_VERSIONS" | grep -vE '(alpha|beta|rc)' | head -n 1)
    else
        LATEST_VERSION=$(echo "$ALL_VERSIONS" | grep -E "$CURRENT_VERSION_TYPE" | head -n 1)
    fi

    LATEST_VERSION="${LATEST_VERSION#v}"

    echo -e "${YELLOW}Sing-box 版本信息：${RESET}"
    echo -e "${BLUE}当前版本：${RESET}${CURRENT_VERSION} ${BLUE}最新版本：${RESET}${LATEST_VERSION}"

    if [[ -n "$LATEST_VERSION" ]]; then
        if [[ "$CURRENT_VERSION" == "$LATEST_VERSION" ]]; then
            echo -e "${GREEN}Sing-box 已是最新版本${RESET}"
        else
            echo -e "${YELLOW}发现新版本！建议更新 Sing-box${RESET}"
        fi
    else
        echo -e "${RED}无法获取 Sing-box 最新版本信息${RESET}"
    fi
else
    echo -e "${RED}未检测到 Sing-box 安装${RESET}"
fi
}

check_services() {
  if systemctl list-units --type=service --all | grep -q "nftables-singbox.service"; then
    if systemctl is-enabled nftables-singbox.service >/dev/null 2>&1; then
        echo -e "${CYAN}Nftables-singbox 自启动服务已启用${RESET}"
    else
        echo -e "${MAGENTA}Nftables-singbox 自启动服务未启用${RESET}"
    fi
  else
    echo -e "${RED}Nftables-singbox 自启动服务未安装！${RESET}"
  fi

 if command -v nft >/dev/null 2>&1; then
    systemctl is-active nftables >/dev/null 2>&1 && echo -e "${CYAN}Nftables 防火墙已启用${RESET}" || echo -e "${MAGENTA}Nftables 防火墙未运行${RESET}"
 else
    echo -e "${RED}Nftables 防火墙未安装！${RESET}"
 fi

   UPDATE_SCRIPT="/etc/sing-box/update-singbox.sh"
   if [ -f "$UPDATE_SCRIPT" ]; then
       if crontab -l 2>/dev/null | grep -q "$UPDATE_SCRIPT"; then
        echo -n -e "${GREEN}自动更新配置文件已设置${RESET}"
        INTERVAL=$(crontab -l 2>/dev/null | grep "$UPDATE_SCRIPT" | grep -oE '\*/[0-9]+' | sed 's|\*/||')
        [[ -n "$INTERVAL" ]] && echo -n -e " ${CYAN}间隔：${RESET}${INTERVAL} 小时" || echo -e " ${RED}无法获取自动更新设定时间！${RESET}"
       else
        echo -n -e "${RED}自动更新配置文件未设置！${RESET}"
       fi
       LAST_UPDATE=$(stat -c %y "$UPDATE_SCRIPT" 2>/dev/null | cut -d'.' -f1)
       [[ -n "$LAST_UPDATE" ]] && echo -e " ${CYAN}上次更新时间：${RESET}${LAST_UPDATE}" || echo -e " ${RED}无法获取上次更新时间！${RESET}"
   else
    echo -e "${RED}自动更新配置文件不存在！${RESET}"
   fi
}

check_system_resources() {
    echo -e "\n${CYAN}系统资源信息：${RESET}"
    CPU_INFO=$(top -bn1 | grep "Cpu(s)" | awk '{if (NF >= 8) printf "使用率: %.1f%%, 空闲: %.1f%%", $2, $8}')
    echo -e "${BLUE}CPU 状态：${RESET}${CPU_INFO}"
    MEM_INFO=$(free -h | awk '/^Mem/ {printf "%s/%s (%.1f%%)", $3, $2, $3/$2*100}')
    echo -e "${BLUE}内存使用：${RESET}${MEM_INFO}"
    DISK_INFO=$(df -h / 2>/dev/null | awk 'NR==2 {print $5}')
    echo -e "${BLUE}磁盘使用：${RESET}${DISK_INFO}"
}

check_network() {
    echo -e "\n${CYAN}网络信息：${RESET}"
    DEFAULT_GATEWAY=$(ip route | awk '/default/ {print $3}')
    GATEWAY_INTERFACE=$(ip route | awk '/default/ {print $5}')
    [[ -n "$DEFAULT_GATEWAY" ]] && echo -e "${BLUE}默认网关：${RESET}${DEFAULT_GATEWAY}\n${BLUE}网关接口：${RESET}${GATEWAY_INTERFACE}" || echo -e "${RED}未找到默认网关信息！${RESET}"
    if [[ -f /run/systemd/resolve/resolv.conf ]]; then
        DNS_SERVERS=$(grep '^nameserver' /run/systemd/resolve/resolv.conf | awk '{print $2}')
    else
        DNS_SERVERS=$(grep '^nameserver' /etc/resolv.conf | awk '{print $2}')
    fi
    [[ -n "$DNS_SERVERS" ]] && echo -e "${BLUE}DNS 服务器：${RESET}\n$DNS_SERVERS" || echo -e "${RED}未找到 DNS 服务器信息！${RESET}"
}

check_singbox
check_services
check_system_resources
check_network